<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
		    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		    "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<mapper namespace="com.shop.goodee.admin.AdminMapper">
	
	
	
	<!-- 상품  -->
	<select id="getCountPd" parameterType="Pager" resultType="Long">
		SELECT COUNT(*)
		FROM ITEM I
			INNER JOIN
			SELLER S 
			USING(ID)
		WHERE I.STATUS=#{status}
		ORDER BY I.DATE DESC 
	</select>
	
	
	<select id="getPdRequest" parameterType="Pager" resultMap="getPdRequestResult">
		SELECT * 
		FROM ITEM I
			INNER JOIN
			SELLER S 
			USING(ID)
		WHERE I.STATUS=#{status}
		ORDER BY I.DATE DESC 
		LIMIT 0, #{perPage}
		
	</select>
	<resultMap type="ItemVO" id="getPdRequestResult">
		<id column="ITEMNUM" property="itemNum"/>
		<result column="ID" property="id"/>
		<result column="ITEMNAME" property="itemName"/>
		<result column="PRICE" property="price"/>
		<result column="TITLE" property="title"/>
		<result column="TYPE" property="type"/>
		<result column="ROLE" property="role"/>
		<result column="POINT" property="point"/>
		<result column="DETAIL" property="detail"/>
		<result column="STOCK" property="stock"/>
		<result column="COUNT" property="count"/>
		<result column="SHOP" property="shop"/>
		<result column="URL" property="url"/>
		<result column="DATE" property="date"/>
		<result column="HIT" property="hit"/>
		<result column="STATUS" property="status"/>
		<result column="SELLERSNS" property="sellerSNS"/>
		<association property="sellerVO" javaType="SellerVO"> 
			<result column="COMPANY" property="company"/>
		</association>	
	</resultMap>
	
	
	<!-- Role 관리 -->
	<insert id="setAddRole" parameterType="MemberVO">
		INSERT INTO MEMBER_ROLE VALUES(#{id},#{roleNum})
	</insert>
	
	<delete id="setDeleteRole" parameterType="MemberVO">
		DELETE FROM MEMBER_ROLE WHERE ID=#{id} AND ROLENUM=#{roleNum}
	</delete>
	
	<!-- SSE 어드민 -->
	<select id="getAdmin" resultMap="getMemberResult">
		SELECT * 
		FROM MEMBER M
			INNER JOIN
			MEMBER_ROLE MR
			ON M.ID = MR.ID
			INNER JOIN
			ROLE R
			ON MR.ROLENUM = R.ROLENUM
		WHERE MR.ROLENUM=1;
	</select>
	
	<!-- 멤버관리  -->
	
	<update id="setMember" parameterType="memberVO">
		UPDATE 
			MEMBER M
			INNER JOIN
			MEMBER_ROLE MR
			ON M.ID = MR.ID
		SET M.POINT=#{point}
		WHERE M.ID=#{id}
	</update>
	

	<select id="getMemberDetail" parameterType="MemberVO" resultMap="getMemberResult">
		SELECT * FROM MEMBER M
			INNER JOIN
			MEMBER_ROLE MR
			ON M.ID = MR.ID
			INNER JOIN
			ROLE R
			ON MR.ROLENUM = R.ROLENUM 
		WHERE M.ID=#{id}
	</select>

	
	
	<sql id="search">
		AND
			<choose>
				<when test="kind == 'id'">M.ID</when>
				<when test="kind == 'name'">M.NAME</when>
				<otherwise>M.EMAIL</otherwise>
			</choose>
		LIKE CONCAT('%',#{search},'%')
	</sql>
	
	<select id="getTotalCount" parameterType="Pager" resultType="Long">
		SELECT COUNT(DISTINCT M.ID)
			FROM MEMBER M
			INNER JOIN
			MEMBER_ROLE MR
			ON M.ID = MR.ID
			INNER JOIN
			ROLE R
			ON MR.ROLENUM = R.ROLENUM
		WHERE R.ROLENAME LIKE CONCAT('%',#{roleName},'%') <include refid="search"></include>
	</select>
	
	
	
	<select id="getMember" parameterType="Pager" resultMap="getMemberResult">
		SELECT M.*, R.*, SUM(R.ROLENUM) sum, COUNT(R.ROLENUM) cnt 
			FROM MEMBER M
			INNER JOIN
			MEMBER_ROLE MR
			ON M.ID = MR.ID
			INNER JOIN
			ROLE R
			ON MR.ROLENUM = R.ROLENUM
		WHERE R.ROLENAME LIKE CONCAT('%',#{roleName},'%') <include refid="search"></include>
		GROUP BY M.ID	
		LIMIT #{startRow}, #{perPage}
	</select>
	<resultMap type="MemberVO" id="getMemberResult">
		<id column="id" property="id"/>
		<result column="pw" property="pw"/>
		<result column="name" property="name"/>
		<result column="email" property="email"/>
		<result column="birth" property="birth"/>
		<result column="phone" property="phone"/>
		<result column="point" property="point"/>
		<result column="regDate" property="regDate"/>
		<result column="status" property="status"/>
		<result column="nickName" property="nickName"/>
		<result column="sum" property="sum"/>
		<result column="cnt" property="cnt"/>
		<collection property="roleVOs" javaType="List" ofType="RoleVO">
			<id column="roleNum" property="roleNum"/>
			<result column="roleName" property="roleName"/>
		</collection>
	</resultMap>
</mapper>